Prometheus is a flexible monitoring solution that is in development since 2012. The software stores all its data in a time series database and offers a multi-dimensional data-model and a powerful query language to generate reports of the monitored resources.
1. Preparing your Environment
Run the following command to create a user for Prometheus and Node Exporter. we will create it without the login option.
To achieve this, we use the parameter --no-create-home which skips the creation of a home directory and disable the shell with --shell /usr/sbin/nologin.
	useradd --no-create-home --shell /usr/sbin/nologin prometheus
	useradd --no-create-home --shell /bin/false node_exporter
2. Create the folders required to store the binaries of Prometheus and its configuration files.
	mkdir /etc/prometheus
	mkdir /var/lib/prometheus
3. Set the ownership of these directories to our prometheus user, to make sure that Prometheus can access to these folders.
	chown prometheus:prometheus /etc/prometheus
	chown prometheus:prometheus /var/lib/prometheus
***Downloading and Installing Node Exporter
As your Prometheus is only capable of collecting metrics, we want to extend its capabilities by adding Node Exporter, a tool that collects information about the system including CPU, disk, and memory usage and exposes them for scraping.
1. Download the latest version of Node Exporter:
	wget https://github.com/prometheus/node_exporter/releases/download/v1.5.0/node_exporter-1.5.0.linux-amd64.tar.gz
2. Unpack the downloaded archive. This will create a directory node_exporter-1.5.0.linux-amd64, containing the executable, a readme and license file:
	tar xvf node_exporter-1.5.0.linux-amd64.tar.gz
3. Copy the binary file into the directory /usr/local/bin and set the ownership to the user you have created in step previously:
	cp node_exporter-1.5.0.linux-amd64/node_exporter /usr/local/bin
	chown node_exporter:node_exporter /usr/local/bin/node_exporter
4. Remove the leftover files of Node Exporter, as they are not needed any longer:
	rm -rf node_exporter-1.5.0.linux-amd64.tar.gz node_exporter-1.5.0.linux-amd64
5. To run Node Exporter automatically on each boot, a systemd service file is required. Create the following file by opening it in Nano:
	nano /etc/systemd/system/node_exporter.service
6. Copy the following information in the service file, save it and exit nano:
[Unit]
Description=Node Exporter
Wants=network-online.target
After=network-online.target

[Service]
User=node_exporter
Group=node_exporter
Type=simple
ExecStart=/usr/local/bin/node_exporter

[Install]
WantedBy=multi-user.target
Collectors are used to gather information about the system. 
7. Reload Systemd to use the newly defined service.
systemctl daemon-reload
8. Run Node Exporter by typing the following command.
systemctl start node_exporter.service
9. Verify that the software started successfully.
systemctl status node_exporter.service
10. If everything is working, enable Node Exporter to start upon boot
systemctl enable node_exporter.service

***Downloading and Installing prometheus
Download and unpack Prometheus latest release of Prometheus.
apt-get update && apt-get upgrade
wget https://github.com/prometheus/prometheus/releases/download/v2.42.0/prometheus-2.42.0.linux-amd64.tar.gz
tar xfz prometheus-*.tar.gz
cd prometheus-2.42.0.linux-amd64/
The following two binaries are in the directory:

prometheus - Prometheus’ main binary file
promtool
The following two folders (which contain the web interface, configuration files examples and the license) are in the directory:

consoles
console_libraries
2. Copy the binary files into the /usr/local/bin/directory:
cp ./prometheus /usr/local/bin/
cp ./promtool /usr/local/bin/
3. Set the ownership of these files to the prometheus user previously created:
chown prometheus:prometheus /usr/local/bin/prometheus
chown prometheus:prometheus /usr/local/bin/promtool
4. Copy the consoles and console_libraries directories to /etc/prometheus:
cp -r ./consoles /etc/prometheus
cp -r ./console_libraries /etc/prometheus
5. Set the ownership of the two folders, as well as of all files that they contain, to our prometheus user:
chown -R prometheus:prometheus /etc/prometheus/consoles
chown -R prometheus:prometheus /etc/prometheus/console_libraries
6. In our home folder, remove the source files that are not needed anymore:
cd .. && rm -rf prometheus-\*

***Configuring Prometheus
Prior to using Prometheus, it needs basic configuring. Thus, we need to create a configuration file named prometheus.yml
1. Open the file prometheus.yml in a text editor:
nano /etc/prometheus/prometheus.yml
Prometheus’ configuration file is divided into three parts: global, rule_files, and scrape_configs.

In the global part we can find the general configuration of Prometheus: scrape_interval defines how often Prometheus scrapes targets, evaluation_interval controls how often the software will evaluate rules. Rules are used to create new time series and for the generation of alerts.

The rule_files block contains information of the location of any rules we want the Prometheus Instance to load.

The last block of the configuration file is named scape_configs and contains the information which resources Prometheus monitors.

Our file should look like this example:
global:
  scrape_interval:     15s
  evaluation_interval: 15s

rule_files:
  # - "first.rules"
  # - "second.rules"

scrape_configs:
  - job_name: 'prometheus'
    scrape_interval: 5s
    static_configs:
      - targets: ['localhost:9090']
The global scrape_interval is set to 15 seconds which is enough for most use cases.

We do not have any rule_files yet, so the lines are commented out and start with a #.

In the scrape_configs part we have defined our first exporter. It is Prometheus that monitors itself. As we want to have more precise information about the state of our Prometheus Instance we reduced the scrape_interval to 5 seconds for this job. The parameters static_configsand targets determine where the exporters are running. In our case it is the same Instance, so we use localhost and the port 9090.

As Prometheus scrapes only exporters that are defined in the scrape_configs part of the configuration file, we have to add Node Exporter to the file, as we did for Prometheus itself.

We add the following part below the configuration for scrapping Prometheus:
- job_name: 'node_exporter'
  scrape_interval: 5s
  static_configs:
    - targets: ['localhost:9100']
Overwrite the global scrape interval again and set it to 5 seconds. As we are scarping the data from the same Instance as Prometheus is running on, we can use localhost with the default port of Node Exporter: 9100.

If you want to scrape data from a remote host, you have to replace localhost with the IP address of the remote Instance.
2. Set the ownership of the file to our Prometheus user:
chown prometheus:prometheus /etc/prometheus/prometheus.yml

***Running Prometheus
1. Start Prometheus directly from the command line with the following command, which executes the binary file as our Prometheus user:
sudo -u prometheus /usr/local/bin/prometheus --config.file /etc/prometheus/prometheus.yml --storage.tsdb.path /var/lib/prometheus/ --web.console.templates=/etc/prometheus/consoles --web.console.libraries=/etc/prometheus/console_libraries
2. Open your browser and type http://IP.OF.YOUR.SERVER:9090 to access the Prometheus interface. If everything is working, we end the task by pressing on CTRL + C on our keyboard
3. The Instance is working now, but it cannot yet be launched automatically at boot. To achieve this, we have to create a new systemd configuration file that will tell your OS which services should it launch automatically during the boot process.
nano /etc/systemd/system/prometheus.service
The service file tells systemd to run Prometheus as prometheus and specifies the path of the configuration files.
4. Copy the following information in the file and save it, then exit the editor:
[Unit]
Description=Prometheus Monitoring
Wants=network-online.target
After=network-online.target

[Service]
User=prometheus
Group=prometheus
Type=simple
ExecStart=/usr/local/bin/prometheus \
--config.file /etc/prometheus/prometheus.yml \
--storage.tsdb.path /var/lib/prometheus/ \
--web.console.templates=/etc/prometheus/consoles \
--web.console.libraries=/etc/prometheus/console_libraries
ExecReload=/bin/kill -HUP $MAINPID

[Install]
WantedBy=multi-user.target
5. systemctl daemon-reload
   systemctl enable prometheus.service
   systemctl start prometheus.service

Prometheus provides a basic web Instance running on http://your.Instance.ip:9090 that provide access to the data collected by the software.
